library SpellDrainLife requires optional HandleHT {

    /* === Настройки заклинания === */

    constant integer abilityIconId = 'SCdr'; // Видимая способность для изучения героем
    constant integer abilityCastId = 'CCdr'; // Способность, которая будет кастована на юнита

    /* === Реализация заклинания  === */

    hashtable ht; // Хэштаблица для записи по структуры на хэндл юнита
    unit caster, target;
    ability abilityCast;

    function onInit(){
        trigger t = CreateTrigger();
        integer i;

        // Используем одну хэштаблицу для хранения данных на хэндлах
        // При её отсутствии инициализируем новую
        static if (LIBRARY_HandleHT) ht = HandleHT;
        else ht = InitHashtable();

        // Слушаем событие каста для всех игроков, экономя лишний вызов функции
        for (0 <= i < bj_MAX_PLAYER_SLOTS) TriggerRegisterPlayerUnitEvent(t, Player(i), EVENT_PLAYER_UNIT_SPELL_EFFECT, null);
        TriggerAddAction(t, function(){
            if (abilityIconId != GetSpellAbilityId()) return; // Используем return чтоб не использовать Condition
            caster = GetTriggerUnit();
            target = GetSpellTargetUnit();

            // Добавляем скрытую абилку, которая будет прокастована на каждого юнита
            if (GetUnitAbilityLevel(caster, abilityCastId) == 0) UnitAddAbility(caster, abilityCastId);
            SetUnitAbilityLevel(caster, abilityCastId, GetUnitAbilityLevel(caster, abilityIconId));
            abilityCast = GetUnitAbility(caster, abilityCastId);
            ShowAbility(abilityCast, false);
            CastAbilityTarget(abilityCast, target);
        });

        t = null;
    }
}